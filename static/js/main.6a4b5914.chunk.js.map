{"version":3,"sources":["Pages/Login/Login.js","Pages/Register/Register.js","components/navbar/Navbar.js","Pages/Profile/ Profile.js","App.js","serviceWorker.js","index.js"],"names":["Login","Fragment","CssBaseline","Container","className","fixed","maxWidth","Typography","variant","component","gutterBottom","Avatar","alt","src","TextField","label","size","type","autoComplete","Button","color","Link","to","class","display","Component","Register","name","useState","gender","setGender","React","checkedB","state","setState","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","FormControlLabel","control","Checkbox","checked","Navbar","side","top","left","bottom","right","toggleDrawer","open","key","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Drawer","onClose","role","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Profile","theme","createMuiTheme","palette","main","secondary","typography","h1","textTransform","h2","h3","h4","h5","h6","App","ThemeProvider","basename","process","exact","path","Boolean","window","location","hostname","match","rootEl","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a4b5914.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport \"./Login.scss\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport Container from \"@material-ui/core/Container\"\nimport { TextField, Typography, Button, Avatar } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\n\nexport class Login extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container className=\"section login\" fixed maxWidth=\"sm\">\n          <div className=\"form\">\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              Welcome\n            </Typography>\n            <Avatar className=\"avatar\" alt=\"\" src=\"/images/witcher.jpg\" />\n            <TextField className=\"input\" label=\"Username\" size=\"small\" />\n            <TextField\n              className=\"input\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              size=\"small\"\n            />\n            <Button\n              className=\"button\"\n              variant=\"contained\"\n              size=\"large\"\n              color=\"secondary\"\n              component={Link}\n              to=\"/Profile\"\n            >\n              Login\n            </Button>\n\n            <Typography class=\"signup\" variant=\"caption\" display=\"block\" gutterBottom>\n              Not yet a member? <Link to=\"/register\" color=\"secondary\">sign up now</Link>\n            </Typography>\n          </div>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"./Register.scss\";\nimport {\n  CssBaseline,\n  Container,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nconst Register = () => {\n  const [gender, setGender] = useState(\"\");\n  const handleChange = event => {\n    setGender(event.target.value);\n  };\n\n  const [state, setState] = React.useState({\n    checkedB: false,\n  });\n\n  const handleCheckbox = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container className=\"section register\" fixed maxWidth=\"sm\">\n        <div className=\"form\">\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Register here\n          </Typography>\n          <TextField className=\"input\" label=\"Username\" size=\"small\" />\n          <TextField\n            className=\"input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            size=\"small\"\n          />\n          <TextField className=\"input\" label=\"First Name\" size=\"small\" />\n          <TextField className=\"input\" label=\"Last Name\" size=\"small\" />\n          <TextField className=\"input\" label=\"Email\" size=\"small\" />\n          <FormControl className=\"input\" >\n            <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={gender}\n              onChange={handleChange}\n            >\n              <MenuItem value=\"Male\">Male</MenuItem>\n              <MenuItem value=\"Female\">Female</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControlLabel className=\"checkbox\" \n            control={\n              <Checkbox\n                checked={state.checkedB}\n                onChange={handleCheckbox(\"checkedB\")}\n                value=\"checkedB\"\n                color=\"primary\"\n              />\n            }\n            label=\"Lorem ipsum dolor sit amet\"\n          />\n          <Button\n            className=\"button\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/Profile\"\n          >\n            Register\n          </Button>\n        </div>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  Button,\n  Drawer,\n  List,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Divider\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\n\nconst Navbar = () => {\n  const [state, setState] = useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = side => (\n    <div\n      className=\"menu-list\"\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div className=\"nav\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            className=\"nav-menu\"\n            onClick={toggleDrawer(\"left\", true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className=\"title\">\n            Profile\n          </Typography>\n          <Button component={Link} to=\"/\" color=\"inherit\">\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={state.left} onClose={toggleDrawer(\"left\", false)}>\n        {sideList(\"left\")}\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport { CssBaseline, Container, Typography } from \"@material-ui/core\"\nimport './Profile.scss'\n\nexport class Profile extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Navbar />\n        <Container className=\"profile\" fixed maxWidth=\"md\">\n          <Typography variant=\"h6\" gutterBottom>\n            Profile Page\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n            Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore\n            consectetur, neque doloribus, cupiditate numquam dignissimos laborum\n            fugiat deleniti? Eum quasi quidem quibusdam.\n          </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Login from \"./Pages/Login/Login\";\nimport Register from \"./Pages/Register/Register\";\nimport Profile from \"./Pages/Profile/ Profile\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#16a085',\n    },\n    secondary: {\n      main: '#f1c40f',\n    },\n  },\n  typography: {\n    h1: {\n      textTransform: \"uppercase\"\n    },\n    h2: {\n      textTransform: \"uppercase\"\n    },\n    h3: {\n      textTransform: \"uppercase\"\n    },\n    h4: {\n      textTransform: \"uppercase\"\n    },\n    h5: {\n      textTransform: \"uppercase\"\n    },\n    h6: {\n      textTransform: \"uppercase\"\n    },\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/register\" component={Register} />\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootEl = document.getElementById(\"root\");\n\nlet render = () => {\n  ReactDOM.render(<App />, rootEl);\n};\n\nif(module.hot) {\n  module.hot.accept('./App', () => {\n    setTimeout(render);\n  })\n}\n\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}